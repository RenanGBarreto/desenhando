; desenhando.nsi
; Generated by Excelsior Installer v1.8
; Sun Sep 06 21:20:22 BRT 2009
; -----------------------------------------------------------------------------
; The installation script based on NSIS modern user interface
; -----------------------------------------------------------------------------
!define PACKAGENAME "desenhando"
!define EIT_LOG_FILENAME "nsis_install.log"
; -----------------------------------------------------------------------------
; Include Modern UI, logic statements, file functions and EIT support
!include "MUI2.nsh"
!include "LogicLib.nsh"
!include "FileFunc.nsh"
!include "${PACKAGENAME}.nsh"
!include "${PACKAGENAME}_PageInstallType.nsh"
!include "${PACKAGENAME}_PageShortcuts.nsh"
!include "${PACKAGENAME}_PageFileAssociations.nsh"
!include "${PACKAGENAME}_PageInstallInfo.nsh"
; -----------------------------------------------------------------------------
; Configuration of the installation script
!define COMPANY_NAME "Desenhando"
!define DEFAULT_PROGRAM_FOLDER "Desenhando"
; Valid values for installation type:  "auto" | "askuser" | "common" | "private"
!define DESIRED_INSTALL_TYPE "auto"
!define SPLASH_FILE "C:\Users\RenanGomes\Desktop\desenhando_NSIS\desenhando_splash.bmp"
!define UNINSTALLER_RELPATH ""
!define CLEANUP_DIR
!define DEFAULT_FOLDER "Desenhando"
!define UNINSTALLER_PATH       "$INSTDIR\${UNINSTALLER_RELPATH}"
!define UNINSTALLER_FILE_NAME  "Uninstall.exe"
; -----------------------------------------------------------------------------
; Declaration of variables
Var StartMenuFolder
Var IsCommonInstallation
; -----------------------------------------------------------------------------
; General Attributes
Name    "v1.0" "v1.0"
OutFile "C:\Users\RenanGomes\Desktop\desenhando_NSIS\Desenhando-Instalacao.exe"

; Default installation folder
InstallDir "$PROGRAMFILES\Desenhando\"

; Version Information
VIAddVersionKey  "CompanyName"     "Desenhando"
VIAddVersionKey  "LegalCopyright"  "(c)Desenhando"
VIAddVersionKey  "ProductName"     "v1.0"
VIAddVersionKey  "ProductVersion"  ""
VIAddVersionKey  "FileDescription" "v1.0"
VIAddVersionKey  "FileVersion"     ""
VIProductVersion "0.0.0.0"

; The installer will perform a CRC on itself before allowing an install
CRCCheck on
; Request application privileges for Windows Vista
RequestExecutionLevel user
BrandingText " "
; -----------------------------------------------------------------------------
; Interface Attributes and Settings
; The interface settings provided by the NSIS compiler itself (such as 
; LicenseText, Icon, CheckBitmap, InstallColors) should not be used in 
; Modern UI scripts. The Modern UI provides equalivent or extended 
; versions of these settings.
!define MUI_ABORTWARNING
!define MUI_ICON   "C:\Program Files\Excelsior Installer 1.8\bin\xinst.ico"
!define MUI_UNICON "C:\Program Files\Excelsior Installer 1.8\bin\xuninst.ico"

!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_RIGHT

!define MUI_HEADERIMAGE_BITMAP   "C:\Program Files\Excelsior Installer 1.8\bin\xinst_header.bmp"
!define MUI_HEADERIMAGE_UNBITMAP "C:\Program Files\Excelsior Installer 1.8\bin\xinst_header.bmp"

!define MUI_WELCOMEFINISHPAGE_BITMAP "C:\Program Files\Excelsior Installer 1.8\bin\xinst_page.bmp"

!define MUI_UNWELCOMEFINISHPAGE_BITMAP "C:\Program Files\Excelsior Installer 1.8\bin\xuninst_page.bmp"

!define MUI_WELCOMEPAGE_TITLE "$(MSG_WELCOMEPAGE_TITLE)"
!define MUI_WELCOMEPAGE_TEXT "$(MSG_WELCOMEPAGE_TEXT)"

; -----------------------------------------------------------------------------
; Installer Page Settings
; Do not display the checkbox to disable the creation of Start Menu shortcuts.
!define MUI_STARTMENUPAGE_NODISABLE
!ifdef MUI_FINISHPAGE_RUN
  !define MUI_FINISHPAGE_RUN_TEXT "$(MSG_FINISHPAGE_RUN_TEXT)"
!endif
!ifdef MUI_FINISHPAGE_SHOWREADME
  !define MUI_FINISHPAGE_SHOWREADME_TEXT "$(MSG_FINISHPAGE_SHOWREADME_TEXT)"
!endif
!ifdef FEATURE_REBOOT_NEEDED
  !define MUI_FINISHPAGE_TEXT_REBOOT      "$(MSG_FINISHPAGE_REBOOT_TEXT)"
  !define MUI_FINISHPAGE_TEXT_REBOOTNOW   "$(MSG_FINISHPAGE_REBOOT_NOW)"
  !define MUI_FINISHPAGE_TEXT_REBOOTLATER "$(MSG_FINISHPAGE_REBOOT_LATER)"
!endif
; Declaration of folder for shortcuts
${EIT_MUI_PAGE_SHORTCUTS_AddFolder}  EIT_MUI_SHORTCUT_FOLDER_DESKTOP
; -----------------------------------------------------------------------------
!ifdef CLEANUP_DIR
  !insertmacro EIT_FUNC_DECL_MkCleanupLogString
!endif
; -----------------------------------------------------------------------------
Function CheckAdminRights
  Push $R1 
  StrCpy $R1 ${DESIRED_INSTALL_TYPE}
  Call   EIT_CheckAdminRights
  Pop $R1 
FunctionEnd ; CheckAdminRights
; -----------------------------------------------------------------------------
; Installer Pages
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE  CheckAdminRights
!insertmacro MUI_PAGE_WELCOME
!ifdef LICENSE_TEXT_FILE
  !insertmacro MUI_PAGE_LICENSE "${LICENSE_TEXT_FILE}"
!endif
!insertmacro EIT_MUI_PAGE_INSTALLTYPE  $IsCommonInstallation
!insertmacro MUI_PAGE_DIRECTORY
!define MUI_STARTMENUPAGE_DEFAULTFOLDER  "${DEFAULT_PROGRAM_FOLDER}"
!insertmacro MUI_PAGE_STARTMENU  Application $StartMenuFolder
!insertmacro EIT_MUI_PAGE_SHORTCUTS  EIT_CreateShortCut
!insertmacro EIT_MUI_PAGE_FILEASSOCIATIONS  EIT_CreateFileAssociation
!insertmacro EIT_MUI_PAGE_INSTALLINFO  $StartMenuFolder  \
                                       EIT_MUI_PAGE_SHORTCUTS_GetInstallInfo
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH
; -----------------------------------------------------------------------------
; Uninstaller Page Settings
!ifdef UNINSTALL_FEEDBACK_URL
  !define MUI_FINISHPAGE_TEXT            "$(MSG_FEEDBACK_TEXT)"
  !define MUI_FINISHPAGE_SHOWREADME      ${UNINSTALL_FEEDBACK_URL}
  !define MUI_FINISHPAGE_SHOWREADME_TEXT "$(MSG_FEEDBACK_CHK_TEXT)"
!endif
; -----------------------------------------------------------------------------
; Uninstaller Pages
!insertmacro MUI_UNPAGE_WELCOME
;  !insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH
; -----------------------------------------------------------------------------
; Languages
##SUPPORTED_LANGUAGES
!insertmacro MUI_LANGUAGE_EIT "English"
!insertmacro MUI_LANGUAGE_EIT "French"
!insertmacro MUI_LANGUAGE_EIT "German"
!insertmacro MUI_LANGUAGE_EIT "Italian"
!insertmacro MUI_LANGUAGE_EIT "Japanese"
!insertmacro MUI_LANGUAGE_EIT "Polish"
!insertmacro MUI_LANGUAGE_EIT "Russian"
!insertmacro MUI_LANGUAGE_EIT "Spanish"
; -----------------------------------------------------------------------------
; Reserve Files
  ;If you are using solid compression, files that are required before
;the actual installation should be stored first in the data block,
;because this will make your installer start faster.
  !insertmacro MUI_RESERVEFILE_LANGDLL
; -----------------------------------------------------------------------------
; Installer Sections
Section "Installer Section"
  ; Call pre-install action of install customization DLL if it was 
  ; specified in the project
  !ifdef INSTALL_CALLBACK_DLL
    !insertmacro EIT_CALL_PREINSTALL "${INSTALL_CALLBACK_DLL}"
  !endif
  ${if} $IsCommonInstallation != 0
    ${EIT_SetRegistryContext} all
  ${else}
    ${EIT_SetRegistryContext} current
  ${endif}
  ; Set $OUTPATH, open install log and create uninstaller
  ${EIT_StartInstallation} "${UNINSTALLER_PATH}" "${UNINSTALLER_FILE_NAME}"
  ; Add package files to be extracted to the output path
  ${EIT_CreateDirectory} "$INSTDIR\dicionarios"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaAcoes.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaAcoes.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaAdjetivos.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaAdjetivos.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaAnimais.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaAnimais.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaCriaturas.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaCriaturas.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaDificeis.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaDificeis.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaEsportes.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaEsportes.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaNomes.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaNomes.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaNovelas.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaNovelas.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaPaises.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaPaises.dic"
  ${EIT_AddFile} "$INSTDIR\dicionarios\listaQualquerPalavra.dic" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\dicionarios\listaQualquerPalavra.dic"
  ${EIT_CreateDirectory} "$INSTDIR\imagens"
  ${EIT_AddFile} "$INSTDIR\imagens\icon.png" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\imagens\icon.png"
  ${EIT_AddFile} "$INSTDIR\imagens\icon32.png" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\imagens\icon32.png"
  ${EIT_AddFile} "$INSTDIR\imagens\icone.ico" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\imagens\icone.ico"
  ${EIT_CreateDirectory} "$INSTDIR\lib"
  ${EIT_AddFile} "$INSTDIR\lib\swing-layout-1.0.3.jar" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\lib\swing-layout-1.0.3.jar"
  ${EIT_CreateDirectory} "$INSTDIR\sons"
  ${EIT_AddFile} "$INSTDIR\sons\inicioucronometro.wav" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\sons\inicioucronometro.wav"
  ${EIT_AddFile} "$INSTDIR\sons\sorteoupalavra.wav" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\sons\sorteoupalavra.wav"
  ${EIT_AddFile} "$INSTDIR\sons\tempoesgotado.wav" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\sons\tempoesgotado.wav"
  ${EIT_AddFile} "$INSTDIR\sons\viupalavra.wav" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\sons\viupalavra.wav"
  ${EIT_AddFile} "$INSTDIR\Desenhando.jar" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\Desenhando.jar"
  ${EIT_AddFile} "$INSTDIR\Executar.bat" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\Executar.bat"
  ${EIT_AddFile} "$INSTDIR\Leia-me.txt" "C:\Users\RenanGomes\Documents\NetBeansProjects\ImagemEAcao\Desenhando\Leia-me.txt"
  ; Create registry key
  !ifdef REGISTRY_KEY_NAME
    ${EIT_WriteRegStr} SHCTX "${REGISTRY_KEY_NAME}" "InstallPath" "$INSTDIR"
  !endif
  ; Create Start Menu shortcuts
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
    ${EIT_CreateDirRecursively}   "$SMPROGRAMS\$StartMenuFolder"

    ${EIT_CreateShortCut}  \
        "$SMPROGRAMS\$StartMenuFolder\Desenhando.lnk"  "$INSTDIR\Executar.bat"  \
        '"" "$INSTDIR\imagens\icone.ico" 0'  "$INSTDIR"

    ${EIT_CreateShortCut}  \
        "$SMPROGRAMS\$StartMenuFolder\Desenhando - Alternativo.lnk"  "$INSTDIR\Desenhando.jar"  \
        '"" "$INSTDIR\imagens\icone.ico" 0'  "$INSTDIR"

    ${EIT_CreateShortCut}  \
        "$SMPROGRAMS\$StartMenuFolder\Uninstall.lnk"  "$INSTDIR\Uninstall.exe"  \
        '""'  "$INSTDIR"
  !insertmacro MUI_STARTMENU_WRITE_END

  ${EIT_MUI_PAGE_SHORTCUTS_CreateShortcut}  EIT_MUI_SHORTCUT_FOLDER_DESKTOP  \
        "\Desenhando.lnk"  "$INSTDIR\Desenhando.jar"  \
        '"" "$INSTDIR\imagens\icone.ico" 0'  "$INSTDIR"
  ; Create file extension associations
  ${EIT_MUI_PAGE_FILEASSOCIATIONS_CreateFileAssociation} 
  ; Call post-install action of install customization DLL if it was 
  ; specified in the project
  !ifdef INSTALL_CALLBACK_DLL
    !insertmacro EIT_CALL_POSTINSTALL
  !endif
  !ifdef FEATURE_REBOOT_NEEDED
    SetRebootFlag true
  !endif
SectionEnd ; Installer Sections
; -----------------------------------------------------------------------------
; Customization of install NSIS callbacks
Function .onInit
  !ifdef SPLASH_FILE
    InitPluginsDir     
    File /oname=$PLUGINSDIR\splash.bmp "${SPLASH_FILE}"
    splash::show 1000 $PLUGINSDIR\splash
    Pop $0
  !endif
  !ifdef REGISTRY_KEY_NAME
    ReadRegStr $R0 HKLM "${REGISTRY_KEY_NAME}" "InstallPath"
    ${if} $R0 == ''
      ClearErrors
      ReadRegStr $R0 HKCU "${REGISTRY_KEY_NAME}" "InstallPath"
    ${endif}
    ${if} $R0 != ''
      StrCpy $INSTDIR $R0
    ${endif}
  !endif
FunctionEnd
; -----------------------------------------------------------------------------
Function .onInstFailed
  ${EIT_AbortInstallation} "${UNINSTALLER_PATH}" "${UNINSTALLER_FILE_NAME}"
FunctionEnd
; -----------------------------------------------------------------------------
Function .onInstSuccess
  ${EIT_EndInstallation} "${COMPANY_NAME}" "${UNINSTALLER_PATH}" "${UNINSTALLER_FILE_NAME}"
FunctionEnd
; -----------------------------------------------------------------------------
; Uninstaller Section
Section "un.Uninstaller Section"
  ; Call pre-uninstall action of uninstall customization DLL if it was 
  ; specified in the project
  !ifdef UNINSTALL_CALLBACK_DLL
    !insertmacro EIT_CALL_PREUNINSTALL ${UNINSTALL_CALLBACK_DLL_DST}
  !endif
  ; at this point the $INSTDIR contais the path to Uninstall.exe
  ${un.EIT_ExecuteUninstall} "$INSTDIR\"
  RMDir "$INSTDIR"
SectionEnd ; Uninstaller Section
; -----------------------------------------------------------------------------
; Customization of uninstall NSIS callbacks
Function un.onInit
FunctionEnd
